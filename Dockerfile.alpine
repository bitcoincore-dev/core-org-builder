ARG RUBY_VERSION=2.5.8
ARG ALPINE_VERSION=alpine3.13

FROM ruby:${RUBY_VERSION}-${ALPINE_VERSION} as base
ARG YOUR_REPO=bitcoincore.org
ARG YOUR_FORK=bitcoincore-dev

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
ENV LC_ALL en_US.UTF-8

ARG HOME=${HOME}
ARG PWD=${PWD}
ARG SITE=${SITE}
ARG ALPINE_VERSION=${ALPINE_VERSION}
ARG GIT_USER_NAME=${GIT_USER_NAME}
ARG GIT_USER_EMAIL=${GIT_USER_EMAIL}
ARG GIT_SERVER=${GIT_SERVER}
ARG GIT_PROFILE=${GIT_PROFILE}
ARG GIT_BRANCH=${GIT_BRANCH}
ARG GIT_HASH=${GIT_HASH}
ARG GIT_REPO_ORIGIN=${GIT_REPO_ORIGIN}
ARG GIT_REPO_NAME=${GIT_REPO_NAME}
ARG GIT_REPO_PATH=${GIT_REPO_PATH}
ARG NOCACHE=${NOCACHE}
ARG VERBOSE=${VERBOSE}
ARG PUBLIC_PORT=${PUBLIC_PORT}

ENV HOME=${HOME}
ENV PWD=${PWD}
ENV SITE=${SITE}
ENV ALPINE_VERSION=${ALPINE_VERSION}
ENV GIT_USER_NAME=${GIT_USER_NAME}
ENV GIT_USER_EMAIL=${GIT_USER_EMAIL}
ENV GIT_SERVER=${GIT_SERVER}
ENV GIT_PROFILE=${GIT_PROFILE}
ENV GIT_BRANCH=${GIT_BRANCH}
ENV GIT_HASH=${GIT_HASH}
ENV GIT_REPO_ORIGIN=${GIT_REPO_ORIGIN}
ENV GIT_REPO_NAME=${GIT_REPO_NAME}
ENV GIT_REPO_PATH=${GIT_REPO_PATH}
ENV NOCACHE=${NOCACHE}
ENV VERBOSE=${VERBOSE}
ENV PUBLIC_PORT=${PUBLIC_PORT}

RUN apk --update add ${NOCACHE} --virtual build_deps build-base ruby-dev libc-dev linux-headers
RUN apk add ${NOCACHE} git vim alpine-sdk build-base libc-dev linux-headers \
bash bash-completion sudo su-exec libatomic readline readline-dev \
libxml2 libxml2-dev ncurses-terminfo-base ncurses-terminfo \
libxslt libxslt-dev zlib-dev zlib ruby ruby-dev yaml yaml-dev \
libffi-dev nodejs ruby-io-console ruby-irb ruby-json ruby-rake ruby-dev build-base \
  libxml2-dev libxslt-dev pcre-dev libffi-dev \
  mariadb-dev postgresql-dev
RUN apk add ${NOCACHE} build-base
RUN apk add --update ruby-nokogiri

RUN gem update --system
RUN gem install ${VERBOSE} bundler -v 1.17.3
RUN gem install ${VERBOSE} bundler -v 2.1.4
RUN gem update  ${VERBOSE} bundler

#RUN curl https://raw.githubusercontent.com/${GIT_PROFILE}/bitcoincore.org/v0.1.1/Gemfile -o bitcoincore.org.gemfile
#RUN curl https://raw.githubusercontent.com/${GIT_PROFILE}/bitcoincore.org/master/Gemfile -o bitcoincore.org.gemfile
#RUN curl https://raw.githubusercontent.com/bitcoincore-dev/bitcoincore.org/master/Gemfile -o bitcoincore.org.gemfile
#RUN curl https://raw.githubusercontent.com/bitcoincore-dev/bitcoincore.org/1641442476-test-pr-833/Gemfile -o bitcoincore.org.gemfile
#RUN curl https://raw.githubusercontent.com/bitcoincore-dev/bitcoincore.org/1641442476-test-pr-833/Gemfile -o Gemfile
#RUN bundle install --gemfile=Gemfile
#RUN bundle install --gemfile=bitcoincore.org.gemfile

RUN gem install faraday>=1.7.2

RUN echo 'gem: --no-document' >> .gemrc
RUN echo 'verbose:   false'   >> .gemrc
RUN echo 'benchmark: false'   >> .gemrc
RUN echo 'backtrace: true'    >> .gemrc
RUN bundle config --global jobs `expr $(nproc)`

RUN gem install jekyll
RUN gem install html-proofer
RUN bundle config list

FROM base as copy
COPY . /src/gh/pages-gem
FROM copy as bundle
RUN bundle install --gemfile=/src/gh/pages-gem/Gemfile
# one step to exclude .build_deps from docker cache
RUN apk add curl
RUN apk update && apk add ${NOCACHE} --virtual .build_deps \
    make \
    build-base && \
    bundle config local.github-pages /src/gh/pages-gem && \

    #curl https://raw.githubusercontent.com/bitcoincore-dev/core-org-builder/master/Gemfile -o core-org-builder.gemfile && \
    #curl https://raw.githubusercontent.com/bitcoincore-dev/core-org-builder/master/docs/Gemfile -o core-org-builder.docs.gemfile && \
    #curl https://raw.githubusercontent.com/bitcoincore-dev/bitcoincore.org/master/Gemfile -o org-bitcoincore.gemfile && \
    #bundle install --gemfile=core-org-builder.gemfile && \
    #bundle install --gemfile=core-org-builder.docs.gemfile && \
    #bundle install --gemfile=org-bitcoincore.gemfile && \

    bundle install --gemfile=/src/gh/pages-gem/Gemfile && \
    echo

RUN rm -rf /usr/lib/ruby/gems/*/cache/*.gem
RUN rm -rf /root/src /tmp/* /usr/share/man /var/cache/apk/*
RUN apk del build-base zlib-dev ruby-dev readline-dev yaml-dev libffi-dev libxml2-dev
RUN apk search --update

FROM base as run

WORKDIR /src/site
#REF: docs/setting-up-your-environment.md

ARG PREVIEW_LANGS=en
## Fast preview, takes less than 30 seconds
#ENV ENABLED_PLUGINS=""
ENV ENABLED_LANGS="${PREVIEW_LANGS}"

## Fast build and tests, takes less than 50 seconds
## Some tests may fail in fast mode; use -i to continue despite them
#ENV ENABLED_PLUGINS=""
ENV ENABLED_LANGS="${PREVIEW_LANGS}"

ENV PUBLIC_PORT=${PUBLIC_PORT}

## Slower (but still pretty fast) build and test
ENV ENABLED_PLUGINS="events autocrossref"
ENV ENABLED_LANGS="${PREVIEW_LANGS}"

CMD ["bundle","install","--user" ,"--system", "--gemfile=Gemfile"]

CMD ["bundle","install","--verbose"]
CMD ["bundle", "exec", "jekyll", "build", "--profile"]
CMD ["bundle", "exec","jekyll", "serve","--incremental","-H", "0.0.0.0", "-P", "4000","--verbose", "--trace"]

